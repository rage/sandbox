#!/bin/bash -e
# This gets passed with each submission to tmc-sandbox

# This gets run under 'su', so we want to source profile mostly to get any special PATH.
# Sourcing seems to terminate the script with -e, even when the return status is 0.
# I have absolutely no idea why. We work around it with the '|| true'.
. /etc/profile || true

# Source user params if any.
# Though the variable names and content format here are limited,
# the contents should be treated carefully, despite us being in a sandbox.
#
# Included variables: error_msg_locale
#
if [ -r .tmcparams ]; then
  . ./.tmcparams
fi

if [ -z "$error_msg_locale" ]; then
  echo "Setting error_msg_locale"
  error_msg_locale=en
fi

ramdisk_usage_kb() {
  df / | tail -n 1 | awk '{ print $3 }'
}

TMC_MAVEN_PLUGIN_VERSION=1.6

# Identify project type

if [ -f Makefile ]; then
  PROJECT_TYPE=makefile_c
else
  PROJECT_TYPE=langs
fi

mvn -v
export M3_HOME=/opt/apache-maven-3.1.1
JAVAC_EXE_PATH=`readlink -f \`which javac\``
MAKE_EXE_PATH=`readlink -f \`which make\``
JDK_DIR=`dirname \`dirname "$JAVAC_EXE_PATH"\``
TOOLS_JAR_PATH="$JDK_DIR/lib/tools.jar"

TOTAL_RAM_KB=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
SANDBOX_RAM_KB=$(expr 32 \* 1024)

echo "Total RAM: ${TOTAL_RAM_KB}KB"
echo "RAM used by ramdisk initially: $(ramdisk_usage_kb) KB"
echo "Project type: $PROJECT_TYPE"

echo "Files in `pwd`:"
ls -laR .

# Compile project
echo "Compiling project..."
case $PROJECT_TYPE in
  langs)
    # Enable maven cache always
    if [ -d /ubdd/maven/repository ]; then
      rm -Rf $HOME/.m2/repository
      mkdir -p $HOME/.m2
      ln -s /ubdd/maven/repository $HOME/.m2/repository
    fi

    # RAM allocation plan:
    # Sandbox: 32MB
    # Maven: 64MB
    # Java program: the rest minus room used by ramdisk due to maven downloads
    MAVEN_RAM_KB=${MAVEN_RAM_KB-`expr 64 \* 1024`}
    echo "Memory allocated to Maven: ${MAVEN_RAM_KB}KB"
    echo "Memory allocated to tests: ${JAVA_RAM_KB}KB"

    export MAVEN_OPTS="-Xmx${MAVEN_RAM_KB}K"

    JAVA_RAM_KB=${JAVA_RAM_KB-$(expr $TOTAL_RAM_KB - $SANDBOX_RAM_KB - $MAVEN_RAM_KB - $(ramdisk_usage_kb))}
    JAVA_RAM_KB=652700
    echo "RAM used by ramdisk: $(ramdisk_usage_kb) KB"
    echo "RAM for maven: $MAVEN_RAM_KB KB"
    echo "RAM for sandbox: $SANDBOX_RAM_KB KB"
    echo "RAM for program: $JAVA_RAM_KB KB"

    # skip for now for sake of getting it work
    # java -jar tmc-langs.jar scan-exercise --exercisePath . --outputPath test_output.txt || exit 101

    #rm -f test_output.txt
  ;;

  makefile_c)
    make clean 2>&1 | tee test_output.txt
    [ ${PIPESTATUS[0]} -eq 0 ] || exit 101
    make all 2>&1 | tee test_output.txt
    [ ${PIPESTATUS[0]} -eq 0 ] || exit 101
    rm -f test_output.txt
  ;;
esac


# Source .tmcrc if any
if [ -f .tmcrc ]; then
  echo "Including .tmcrc"
  . ./.tmcrc
fi


echo "Running tests..."
case $PROJECT_TYPE in
  langs)
    export JVM_OPTIONS="-Xms${JAVA_RAM_KB}K -Xmx${JAVA_RAM_KB}K ${runtime_params[@]}"
    java -jar tmc-langs.jar run-tests --exercisePath . --outputPath test_output.txt > stdout.txt 2> stderr.txt || exit 103
    cat stdout.txt
    cat stderr.txt
    java -jar tmc-langs.jar checkstyle --exercisePath . --outputPath validations.json --locale $error_msg_locale > stdout.txt 2> stderr.txt || exit 104
    cat stdout.txt
    cat stderr.txt
    ls -laR
  ;;

  makefile_c)
    # RUN_VALGRIND and VALGRIND_OPTS can be set in .tmcrc on per exercise basis
    RESULTS_DIR=.
    if [ ${RUN_VALGRIND} ]; then
      valgrind -q ${VALGRIND_OPTS} --log-file=valgrind.log ./test/test > stdout.txt 2> stderr.txt
    else
      # valgrind.log must exist. Otherwise tar packaging fails
      touch valgrind.log
      make run-test > stdout.txt 2> stderr.txt
      RESULTS_DIR=test/
    fi
    if [ ! -f test_output.txt ]; then
      tmc-check-convert-results $RESULTS_DIR > test_output.txt
    fi
  ;;
esac

echo "tmc-run completed successfully"

exit 0
